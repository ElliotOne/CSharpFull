Collections
===========

Definition:
A collection is a series of similar data types.  
Example: An array of numbers.

---

Non-Generic Collections:
- Used with a particular data type (e.g., int) for type safety.

Common Non-Generic Collections:
- ArrayList:
    - Similar to arrays but automatically resizes.
- Hashtable:
    - Stores key-value pairs based on the hash code of the key.
- SortedList:
    - Stores key-value pairs sorted by keys by default.
- Stack:
    - Last In First Out (LIFO) collection.
    - Operations: Push, Pop, etc.
- Queue:
    - First In First Out (FIFO) collection.
    - Operations: Enqueue, Dequeue, etc.
- BitArray:
    - Array of bits (1s and 0s).

---

Generic Collections:
- Can be used with different data types like int, string, bool, etc.

Common Generic Collections:
- List<T>:
    - Similar to ArrayList but type-safe.
- Dictionary<TKey, TValue>:
    - Similar to Hashtable but generic and type-safe.
- SortedList<TKey, TValue>:
    - Similar to SortedList but generic.
- SortedDictionary<TKey, TValue>:
    - A sorted dictionary with generic key-value pairs.
- Stack<T>:
    - Generic version of Stack.
- Queue<T>:
    - Generic version of Queue.

---

Other Collections:
- KeyValuePair<TKey, TValue>
- NameValueCollection
